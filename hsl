#!/usr/bin/env python

import sys
import os.path
import tempfile
import signal
import subprocess


src = os.path.join(os.path.dirname(os.path.realpath(__file__)), 'src')


hsl = src + '/Main.hs'


def main():
    binary = os.path.join(tempfile.mkdtemp(), 'Main')
    mainhs = binary + '.hs'

    f = sys.argv[1:][-1]
    inits = "\n\n".join(sys.argv[1:-1])

    fh = open(mainhs, 'w')
    fh.write(open(hsl).read() % (inits, f))
    fh.close()

    # TODO: set using a command-line flag
    compile = False
    if compile:
        ghc = ['ghc', '-O2', '-i' + src, mainhs]

        if subprocess.Popen(ghc, stdout=subprocess.PIPE).wait():
          return

        cmd = binary
    else:
        ghc = ['ghc', '-i' + src, mainhs, '-e', 'main']

        cmd = ghc

    p = subprocess.Popen(cmd)
    try:
        p.wait()
    except (KeyboardInterrupt, IOError):
        p.send_signal(signal.SIGTERM)


main()
